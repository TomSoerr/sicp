function gcd(a, b) {
  return b === 0 ? a : gcd(b, a % b);
}

// normal-order
// gcd(206, 40)
// 40 === 0 ? 206 : gcd(40, 206 % 40)
// gcd(40, 206 % 40)
// gcd(40, 6)
// 6 === 0 ? 40 : gcd(6, 40 % 6)
// gcd(6, 40 % 6)
// gcd(6, 4)
// 4 === 0 ? 6 : gcd(4, 6 % 4)
// gcd(4, 6 % 4)
// gcd(4, 2)
// 2 === 0 ? 4 : gcd(2, 4 % 2)
// gcd(2, 4 % 2)
// gcd(2, 0)
// 0 === 0 ? 2 : gcd(0, 2 % 0)
// => 2
// 4 remainder operations performed

// applicative-order
// gcd(206, 40)
// 40 === 0 ? a : gcd(40, 206 % 40)
// gcd(40, 206 % 40)
// 206 % 40 === 0 ? a : gcd(206 % 40, 40 % (206 % 40))
// gcd(206 % 40, 40 % (206 % 40))
// 40 % (206 % 40) === 0 ? a : gcd(40 % (206 % 40), (206 % 40) % (40 % (206 % 40)))
// gcd(40 % (206 % 40), (206 % 40) % (40 % (206 % 40)))
// (206 % 40) % (40 % (206 % 40)) === 0 ? a : gcd((206 % 40) % (40 % (206 % 40)), (40 % (206 % 40)) % (206 % 40) % (40 % (206 % 40))))
// gcd((206 % 40) % (40 % (206 % 40)), (40 % (206 % 40)) % (206 % 40) % (40 % (206 % 40))))
// (40 % (206 % 40)) % (206 % 40) % (40 % (206 % 40)) === 0 ? (206 % 40) % (40 % (206 % 40)) : gcd(...)
// (206 % 40) % (40 % (206 % 40))
// => 2
// 18 remainder operations performed
